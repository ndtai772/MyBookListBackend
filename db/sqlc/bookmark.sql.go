// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: bookmark.sql

package db

import (
	"context"
)

const createBookmark = `-- name: CreateBookmark :one
INSERT INTO bookmarks (
    book_id,
    created_by
) VALUES (
    $1, $2
) RETURNING id, book_id, created_by, created_at
`

type CreateBookmarkParams struct {
	BookID    int32 `json:"book_id"`
	CreatedBy int32 `json:"created_by"`
}

func (q *Queries) CreateBookmark(ctx context.Context, arg CreateBookmarkParams) (Bookmark, error) {
	row := q.db.QueryRowContext(ctx, createBookmark, arg.BookID, arg.CreatedBy)
	var i Bookmark
	err := row.Scan(
		&i.ID,
		&i.BookID,
		&i.CreatedBy,
		&i.CreatedAt,
	)
	return i, err
}

const deleteBookmark = `-- name: DeleteBookmark :exec

DELETE FROM bookmarks
WHERE id = $1
`

// -- name: GetBookmark :one
// SELECT *
// FROM bookmark_detail
// WHERE id = $1 LIMIT 1;
func (q *Queries) DeleteBookmark(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteBookmark, id)
	return err
}
