# Redirect all HTTP traffic to HTTPS
server {
   listen 80;
   listen [::]:80;
   server_name www.{{ server_name }} {{ server_name }};
   return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.{{ server_name }} {{ server_name }};
 
    # Path to certs
    ssl_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ server_name }}/privkey.pem; # managed by Certbot

    ssl_session_timeout 30m;
    ssl_session_cache shared:SSL:10m;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;

    resolver 1.1.1.1 1.0.0.1 valid=300s; # Cloudflare
    resolver_timeout 5s;

    location /covers {
        proxy_pass http://libgen.rs/covers;
    }

    location / {
        proxy_pass http://127.0.0.1:{{ expose_port }};
    }
}